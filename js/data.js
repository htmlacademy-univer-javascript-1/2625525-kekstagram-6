import { getRandomNumber } from './util.js';

const COMMENT_MESSAGES = [
  'Всё отлично!',
  'В целом всё неплохо. Но не всё.',
  'Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.',
  'Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.',
  'Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.',
  'Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!'
];

const NAMES = [
  'Алиса',
  'Максим',
  'Егор',
  'Валерия',
  'Кирилл',
  'Полина',
  'Роман',
  'Анастасия',
  'Никита',
  'Дарья',
  'Матвей',
  'Вера',
  'Тимофей',
  'Лидия',
  'Михаил',
  'Евгения',
  'Фёдор',
  'Злата',
  'Данила',
  'Ксения'
];

const DESCRIPTIONS = [
  'Утро начинается с чашки горячего кофе и лёгкого тумана за окном.',
  'Город оживает под мягким светом заката.',
  'Песчаный пляж и шум волн — лучшее место для отдыха.',
  'Лес после дождя пахнет свежестью и свободой.',
  'Дорога уходит вдаль, а впереди — новые приключения.',
  'Солнце садится за горы, окрашивая небо в золотой цвет.',
  'Тепло костра и разговоры до поздней ночи.',
  'Полет птицы над морем кажется мгновением вечности.',
  'Старая улица хранит воспоминания детства.',
  'Снег медленно падает, укрывая город тишиной.',
  'Прогулка по ночному городу под светом фонарей.',
  'На вершине холма открывается вид, от которого замирает серцо.',
  'Цветы на подоконнике радуют даже в пасмурный день.',
  'Горячий чай и книга — идеальное сочетание для вечера.',
  'Парк наполнен смехом и солнечным светом.',
  'Ветер играет в волосах и приносит запах моря.',
  'Уютное утро с музыкой и ароматом свежей выпечки.',
  'Зеркальная гладь озера отражает облака и небо.',
  'Город в утреннем тумане будто дремлет.',
  'Мост соединяет не только берега, но и воспоминания.'
];

function generateMessage() {
  const COUNT_MESSAGE = getRandomNumber(1, 2);
  let message = '';
  for (let i = 0; i < COUNT_MESSAGE; i++) {
    if (i > 0) {
      message += ' ';
    }
    message += COMMENT_MESSAGES[getRandomNumber(0, COMMENT_MESSAGES.length - 1)];
  }
  return message;
}

function generateComment() {
  return {
    id: crypto.randomUUID(),
    avatar: `img/avatar-${getRandomNumber(1, 6)}.svg`,
    message: generateMessage(),
    name: NAMES[getRandomNumber(0, NAMES.length - 1)]
  };
}

function generateComments() {
  const COUNT_COMMENTS = getRandomNumber(0, 30);
  const comments = [];

  for (let i = 0; i < COUNT_COMMENTS; i++) {
    comments.push(generateComment());
  }

  return comments;
}

function getInformationPhotos() {
  const photos = [];

  for (let i = 1; i <= 25; i++) {
    const photo = {
      id: i,
      url: `photos/${i}.jpg`,
      description: DESCRIPTIONS[i - 1],
      likes: getRandomNumber(15, 200),
      comments: generateComments()
    };
    photos.push(photo);
  }

  return photos;
}

export { getInformationPhotos };
